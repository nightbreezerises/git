#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<stdlib.h>


//直接插入排序
void insertSort(int A[], int n) {
	int  i, j, temp;
	for (i = 1; i < n; i++) {
		if (A[i] < A[i - 1]) {//小于前驱
			temp = A[i];
			for (j = i; j > 0 && A[j - 1] > temp; j--)
				A[j] = A[j - 1];
			A[j] = temp;
		}
	}
}

//标准写法
void InsertSort(int A[], int n) {
	int  i, j, temp;
	for (i = 1; i < n; i++) {
		if (A[i] < A[i - 1]) {//小于前驱
			temp = A[i];
			for (j = i - 1; j >= 0 && A[j] > temp; --j)
				A[j + 1] = A[j];
			A[j + 1] = temp;
		}
	}
}

//带哨兵
void InsertSort1(int A[], int n) {
	int  i, j;
	for (i = 2; i < n; i++) {
		if (A[i] < A[i - 1]) {//小于前驱
			A[0] = A[i];
			for (j = i - 1; A[j] > A[0]; --j)
				A[j + 1] = A[j];
			A[j + 1] = A[0];
		}
	}
}

//折半插入排序
void InsertSort2(int A[], int n) {
	int  i, j, low, high, mid;
	for (i = 2; i <= n; ++i) {
		A[0] = A[i];
		low = 1, high = i - 1;
		while (low <= high) {
			mid = (low + high) / 2;
			if (A[mid] < A[0])
				low = mid + 1;
			else
				high = mid - 1;
		}
		for (j = i - 1; j >= high + 1; --j)
			A[j + 1] = A[j];
		A[high + 1] = A[0];
	}
}

int main() {
	int A[10];
	A[0] = 12;//带哨兵时A[0]不能存数据
	A[1] = 6;
	A[2] = 23;
	A[3] = 13;
	A[4] = 233;
	A[5] = 223;
	A[6] = 213;
	A[7] = 263;
	A[8] = 2783;
	A[9] = 2453;
	insertSort(A, 10);
	for (int i = 0; i < 10; i++)
		printf("%d\n", A[i]);
	return 0;
}